def swap(a, i, j):
    a[i], a[j] = a[j], a[i]

def max_heapify(a, x):
    '''x is the index of the one violation of the heap property'''
    largest = x
    if left(x) <= heap_size(a) and a[left(x)] > a[x]:
        largest = left(x)
    if right(x) <= heap_size(a) and a[right(x)] > a[x]:
        largest = right(x)
    if largest != x:
        swap(a, x, largest)
        max_heapify(a, largest)
